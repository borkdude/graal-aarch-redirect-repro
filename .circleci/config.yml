# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  linux:
    docker:
      - image: circleci/clojure:lein-2.9.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.2.0
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install lsof
          command: |
            sudo apt-get install lsof
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.2.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java11-linux-amd64-21.2.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-21.2.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            ./build
          no_output_timeout: 30m
  linux-aarch64:
    machine:
      enabled: true
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.2.0
    steps:
      - checkout
      - run:
          name: Install lsof
          command: |
            sudo apt-get install lsof
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.2.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java11-linux-aarch64-21.2.0.tar.gz
              tar xzf graalvm-ce-java11-linux-aarch64-21.2.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            ./build
  linux-aarch64-static:
    machine:
      enabled: true
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.2.0
    steps:
      - checkout
      - run:
          name: Install lsof
          command: |
            sudo apt-get install lsof
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
            ./setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.2.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java11-linux-aarch64-21.2.0.tar.gz
              tar xzf graalvm-ce-java11-linux-aarch64-21.2.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            REDIRECT_REPRO_MUSL=true ./build
  # mac:
  #   macos:
  #     xcode: "12.0.0"
  #   environment:
  #     MACOSX_DEPLOYMENT_TARGET: 10.13 # 10.12 is EOL
  #     GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.2.0/Contents/Home
  #     BABASHKA_PLATFORM: macos # used in release script
  #     BABASHKA_TEST_ENV: native
  #     BABASHKA_XMX: "-J-Xmx6500m"
  #   resource_class: large
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Pull Submodules"
  #         command: |
  #           git submodule init
  #           git submodule update
  #     - restore_cache:
  #         keys:
  #           - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
  #     - run:
  #         name: Install Clojure
  #         command: |
  #           script/install-clojure /usr/local
  #     - run:
  #         name: Install Leiningen
  #         command: |
  #           script/install-leiningen
  #     - run:
  #         name: Download GraalVM
  #         command: |
  #           cd ~
  #           ls -la
  #           if ! [ -d graalvm-ce-java11-21.2.0 ]; then
  #             curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java11-darwin-amd64-21.2.0.tar.gz
  #             tar xzf graalvm-ce-java11-darwin-amd64-21.2.0.tar.gz
  #           fi
  #     - run:
  #         name: Build binary
  #         command: |
  #           export PATH=$GRAALVM_HOME/bin:$PATH
  #           script/uberjar
  #           script/compile
  #         no_output_timeout: 30m
  #     - run:
  #         name: Run tests
  #         command: |
  #           export PATH=$GRAALVM_HOME/bin:$PATH
  #           script/test
  #           script/run_lib_tests
  #     - run:
  #         name: Release
  #         command: |
  #           .circleci/script/release
  #     - save_cache:
  #         paths:
  #           - ~/.m2
  #           - ~/graalvm-ce-java11-21.2.0
  #         key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
  #     - store_artifacts:
  #         path: /tmp/release
  #         destination: release
  #     - run:
  #         name: Publish artifact link to Slack
  #         command: |
  #           ./bb .circleci/script/publish_artifact.clj || true
  # deploy:
  #   resource_class: large
  #   docker:
  #     - image: circleci/clojure:lein-2.9.1
  #   working_directory: ~/repo
  #   environment:
  #     LEIN_ROOT: "true"
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Pull Submodules"
  #         command: |
  #           git submodule init
  #           git submodule update
  #     - restore_cache:
  #         keys:
  #         - v1-dependencies-{{ checksum "project.clj" }}
  #         # fallback to using the latest cache if no exact match is found
  #         - v1-dependencies-
  #     - run: .circleci/script/deploy
  #     - save_cache:
  #         paths:
  #           - ~/.m2
  #         key: v1-dependencies-{{ checksum "project.clj" }}
  # docker:
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /tmp
  #     - setup_remote_docker:
  #         version: 19.03.12
  #     - run:
  #         name: Build Docker image
  #         command: .circleci/script/docker

workflows:
  version: 2
  ci:
    jobs:
      - linux
      - linux-aarch64
      - linux-aarch64-static
